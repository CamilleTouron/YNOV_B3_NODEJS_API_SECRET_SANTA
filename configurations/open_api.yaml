openapi: 3.0.3
info:
  title: SECRET SANTA
  description: API for web site handling SECRET SANTA events.
  contact:
    email: touroncamille@icloud.com
  version: 1.0.0
servers:
  - url: "{protocol}://{server}"
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      server:
        default: localhost:3003
tags:
  - name: member
    description: Everything about members.
  - name: event
    description: Everything about events.
  - name: participations
    description: Everything about participations.
  - name: request
    description: Everything about request.
  - name: admin
    description: Everything for admin.
paths:
  /help:
    get:
      tags:
        - member
      summary: Get all routes except admin ones.
      description: Help to list all routes except admin ones.
      responses:
        "500":
          $ref: "#/components/responses/ServerError"
  /login:
    post:
      tags:
        - member
        - admin
      summary: login
      description: login
      requestBody:
          $ref: "#/components/requestBodies/Login"
      responses:
        "500":
          $ref: "#/components/responses/ServerError"    
  /member:
    get:
      tags:
        - member
      summary: Get all members.
      description: ""
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersForShowing'
    post:
      tags:
        - member
      summary: Create member.
      description: Create member with complexe password.
      requestBody:
          $ref: "#/components/requestBodies/MemberCreation"
      responses:
        "500":
          $ref: "#/components/responses/ServerError"
  /member/{id}:
    get:
      tags:
        - member
      summary: Get all members.
      description: Get member by id.
      parameters:
        - name: id
          in: path
          description: member id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberForShowing'
    delete:
      tags:
        - member
      summary: Supprimer un adhérent.
      description: Supprimer un adhérent supprime les avis qu'il a rédiger.
      operationId: delete member
      parameters:
        - name: id
          in: path
          description: Id de l'adhérent.
          required: true
          schema:
            type: integer
      responses:
        "500":
          $ref: "#/components/responses/ServerError"
    patch:
      tags:
        - member
      summary: Update member.
      description: Update member.
      requestBody:
          $ref: "#/components/requestBodies/MemberCreation"
      responses:
        "500":
          $ref: "#/components/responses/ServerError"
components:
  securitySchemes:
    member:
      type: http
      scheme: bearer
      bearerFormat: JWT
    admin:
      type: apiKey
      in: header
      name: X-ADMIN-KEY
  parameters:
    idInPath:
      required: true
      name: id
      in: path
      schema:
        type: integer
  schemas:
    Login:
      type: object
      properties:
        mail:
            type: string
            example: "TheBoss"
        password:
          type: string
          example: "etvhtrdvtyesvy"
      xml:
        name: Login
    Member:
      type: object
      properties:
        firstname:
          type: string
          example: "Touron"
        lastname:
          type: string
          example: "Camille"
        isAdmin:
          type: boolean
          example: "false"
        password:
          type: string
          example: "etvhtrdvtyesvy"
        mail:
            type: string
            example: "touroncamille@icloud.com"
      xml:
        name: Member
    MemberForShowing:
      type: object
      properties:
        firstname:
          type: string
          example: "Touron"
        lastname:
          type: string
          example: "Camille"
        isAdmin:
          type: boolean
          example: "false"
        mail:
          type: string
          example: "touroncamille@icloud.com"
      xml:
        name: Signin
    MembersForShowing:
      type: array
      xml:
        wrapped: true
      items:
        $ref: "#/components/schemas/MemberForShowing"
  requestBodies:
    Login:
      required: true
      description: Login request body.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Login'
    MemberCreation:
      required: true
      description: Registration request body.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Member'
  responses:
    ServerError:
      description: "Server seems to be in bad shape..."
      content:
        application/json:
          schema:
            type: object
            required: [ success, message ]
            properties:
              success:
                type: boolean
                default: false
                example: false
              message:
                type: string
                default: "Server seems to be in bad shape..."
                example: "Server seems to be in bad shape..."